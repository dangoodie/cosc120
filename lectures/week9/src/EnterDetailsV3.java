/**
 * @author Dr Andreas Shepley (asheple2@une.edu.au | andreashepley01@gmail.com)
 * created for COSC120 (Trimester 1 2022)
 * last revised: Trimester 1 2024
 */

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;

public class EnterDetailsV3 {

    private static JTextField nameEntry;
    private static JTextArea geekStatement;
    private static JComboBox <String> colorSelection;
    private static JCheckBox selectCOSC120;
    private static String gender;


    public static void main(String[] args){
        //create a load main window JFrame
        JFrame mainWindow = new JFrame("Collection Geek Info");
        mainWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        mainWindow.setLocationRelativeTo(null);
        mainWindow.setIconImage(new ImageIcon("./icon.png").getImage());

        //add the JPanel containing the 4 other JPanels to the centre of the main window
        mainWindow.add(userSelections(),BorderLayout.CENTER);

        JButton submitInfo = new JButton("Submit");
        //call the addActionListener on the submitInfo button. Write instructions for the program
        //to follow if an event is generated by the button (it is clicked)
        submitInfo.addActionListener(e -> {//lambda expression
            //the user's entries/selections are print to standard output if the button is clicked - this is the 'action' performed
            System.out.println("The user's name is "+nameEntry.getText());
            System.out.println("The user's geek statement is "+geekStatement.getText());
            System.out.println("The user's favourite color is "+colorSelection.getSelectedItem());
            System.out.println("Does the user love COSC120? "+selectCOSC120.isSelected());
            System.out.println("The user's preferred gender is: "+gender);
        });
        //add the submit button at the bottom of the main window
        mainWindow.add(submitInfo,BorderLayout.SOUTH);

        //automatically set the size of the window
        mainWindow.pack();
        mainWindow.setVisible(true);
    }

    /**
     * method to allow user to enter/select preferences
     * @return JPanel of 4 sub-JPanels, each containing a user entry/selection
     */
    public static JPanel userSelections(){

        //each of these blocks could be in a separate, JPanel returning method
        JLabel instructionEnterName = new JLabel("Please enter your name:");
        nameEntry = new JTextField(12);
        JPanel namePanel = new JPanel();
        namePanel.add(instructionEnterName);
        namePanel.add(nameEntry);
        namePanel.setBackground(Color.CYAN);

        JLabel instructionEnterGeekStatement = new JLabel("Please explain why you're a geek!");
        geekStatement = new JTextArea(4,12);
        JPanel geekStatementPanel = new JPanel();
        geekStatementPanel.add(instructionEnterGeekStatement);
        geekStatementPanel.add(geekStatement);
        geekStatementPanel.setBackground(Color.PINK);

        String[] colours = {"Blue", "Red", "Pink", "Yellow"};
        JLabel instructionColor = new JLabel("Please select your favourite color!");
        colorSelection = new JComboBox<>(colours);
        //allow the user to input their own colour (not included in the list)
        colorSelection.setEditable(true);
        JPanel colorSelectionPanel = new JPanel();
        colorSelectionPanel.add(instructionColor);
        colorSelectionPanel.add(colorSelection);
        colorSelectionPanel.setBackground(Color.ORANGE);

        JLabel loveCOSC120 = new JLabel("Do you love COSC120? (SAY YESSS!!!)");
        selectCOSC120 = new JCheckBox("Yes");
        //automatically assume everyone loves COSC120 :)
        selectCOSC120.setSelected(true);
        JPanel loveCOSC120Panel = new JPanel();
        loveCOSC120Panel.add(loveCOSC120);
        loveCOSC120Panel.add(selectCOSC120);
        loveCOSC120Panel.setBackground(Color.YELLOW);


        //the button group ensures only one button is selected
        ButtonGroup genderButtonGroup = new ButtonGroup();
        //create one button for each option
        JRadioButton male = new JRadioButton("Male"); //male is set as true by default
        male.requestFocusInWindow();
        JRadioButton female = new JRadioButton("Female");
        //add the buttons to the group
        genderButtonGroup.add(male);
        genderButtonGroup.add(female);
        //set the action command - value when clicked
        male.setActionCommand("Male");
        female.setActionCommand("Female");
        //add an action listener to each button, where the action listener updates the gender field if a user changes their selection
        ActionListener actionListener = e-> gender = genderButtonGroup.getSelection().getActionCommand();
        male.addActionListener(actionListener);
        female.addActionListener(actionListener);
        //create and return a new JPanel (add all the buttons to it first)
        JPanel genderPanel = new JPanel();
        genderPanel.setBorder(BorderFactory.createTitledBorder("Which gender are you interested in?"));
        genderPanel.add(male);
        genderPanel.add(female);

        JPanel allEntries = new JPanel();
        //add the 4 panels in a 2 by 2 grid using the GridLayout manager
        allEntries.setLayout(new GridLayout(2,2));
        //alternatively, stack them on top of each other using the BoxLayout manager (y-axis aligned stacks them vertically)
        //allEntries.setLayout(new BoxLayout(allEntries,BoxLayout.Y_AXIS));
        allEntries.add(namePanel);
        allEntries.add(geekStatementPanel);
        allEntries.add(colorSelectionPanel);
        allEntries.add(loveCOSC120Panel);
        allEntries.add(genderPanel);

        return allEntries;
    }
}
