/**
 * @author Dr Andreas Shepley (asheple2@une.edu.au | andreashepley01@gmail.com)
 * created for COSC120 (Trimester 1 2022)
 * last revised: Trimester 1 2024
 */

import javax.swing.*;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.List;

public class EnterDetailsV4 {
    private static JTextField nameEntry;
    private static JTextArea geekStatement;
    private static JComboBox <String> colorSelection;
    private static JCheckBox selectCOSC120;
    private static String gender;
    private static List<String> favouriteTVShows;


    public static void main(String[] args){
        //create a load main window JFrame
        JFrame mainWindow = new JFrame("Collection Geek Info");
        mainWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        mainWindow.setLocationRelativeTo(null);
        mainWindow.setIconImage(new ImageIcon("./icon.png").getImage());

        //add the JPanel containing the 4 other JPanels to the centre of the main window
        mainWindow.add(groupPanels(), BorderLayout.CENTER);

        JButton submitInfo = new JButton("Submit");
        //call the addActionListener on the submitInfo button. Write instructions for the program
        //to follow if an event is generated by the button (it is clicked)
        submitInfo.addActionListener(e -> {//lambda expression
            //the user's entries/selections are print to standard output if the button is clicked - this is the 'action' performed
            System.out.println("The user's name is "+nameEntry.getText());
            System.out.println("The user's geek statement is "+geekStatement.getText());
            System.out.println("The user's favourite color is "+colorSelection.getSelectedItem());
            System.out.println("Does the user love COSC120? "+selectCOSC120.isSelected());
            System.out.println("The user's favourite tv shows are: "+favouriteTVShows);
            System.out.println("The user's preferred gender is: "+gender);
        });
        //add the submit button at the bottom of the main window
        mainWindow.add(submitInfo,BorderLayout.SOUTH);
        mainWindow.pack();
        mainWindow.setVisible(true);
    }

    /**
     * enables user entry of name
     * @return a panel containing the name entry instruction and associated textfield
     */
    public static JPanel enterName(){
        JLabel instructionEnterName = new JLabel("Please enter your name:");
        nameEntry = new JTextField(12);
        JPanel namePanel = new JPanel();
        namePanel.add(instructionEnterName);
        namePanel.add(nameEntry);
        namePanel.setBackground(Color.CYAN);
        return namePanel;
    }

    /**
     * enables user to state what makes them a geek
     * @return a panel containing the instruction and text area
     */
    public static JPanel enterStatement(){
        JLabel instructionEnterGeekStatement = new JLabel("Please explain why you're a geek!");
        geekStatement = new JTextArea(4,20);
        JPanel geekStatementPanel = new JPanel();
        geekStatementPanel.add(instructionEnterGeekStatement);
        geekStatementPanel.add(geekStatement);
        geekStatementPanel.setBackground(Color.ORANGE);
        return geekStatementPanel;
    }

    /**
     * enables user to select or enter their favourite colour
     * @return a panel containing the instruction and dropdown list
     */
    public static JPanel selectColor(){
        String[] colours = {"Blue", "Red", "Pink", "Yellow"};
        JLabel instructionColor = new JLabel("Please select your favourite color!");
        colorSelection = new JComboBox<>(colours);
        //allow the user to input their own colour (not included in the list)
        colorSelection.setEditable(true);
        JPanel colorSelectionPanel = new JPanel();
        colorSelectionPanel.add(instructionColor);
        colorSelectionPanel.add(colorSelection);
        colorSelectionPanel.setBackground(Color.YELLOW);
        return colorSelectionPanel;
    }

    /**
     * enables user to confirm they love COSC120!
     * @return a panel containing the instruction and checkbox
     */
    public static JPanel COSC120(){
        JLabel loveCOSC120 = new JLabel("Do you love COSC120? (SAY YESSS!!!)");
        selectCOSC120 = new JCheckBox("Yes");
        //automatically assume everyone loves COSC120 :)
        selectCOSC120.setSelected(true);
        JPanel loveCOSC120Panel = new JPanel();
        loveCOSC120Panel.add(loveCOSC120);
        loveCOSC120Panel.add(selectCOSC120);
        loveCOSC120Panel.setBackground(Color.CYAN);
        return loveCOSC120Panel;
    }

    /**
     * enables user to select their preferred gender
     * @return a panel containing the 2 radio buttons + instruction to user (as a border title)
     */
    public static JPanel chooseGender(){
        //the button group ensures only one button is selected
        ButtonGroup genderButtonGroup = new ButtonGroup();
        //create one button for each option
        JRadioButton male = new JRadioButton("Male"); //male is set as true by default
        male.requestFocusInWindow();
        JRadioButton female = new JRadioButton("Female");
        //add the buttons to the group
        genderButtonGroup.add(male);
        genderButtonGroup.add(female);
        //set the action command - value when clicked
        male.setActionCommand("Male");
        female.setActionCommand("Female");
        //add an action listener to each button, where the action listener updates the gender field if a user changes their selection
        ActionListener actionListener = e-> gender = genderButtonGroup.getSelection().getActionCommand();
        male.addActionListener(actionListener);
        female.addActionListener(actionListener);
        //create and return a new JPanel (add all the buttons to it first)
        JPanel genderPanel = new JPanel();
        genderPanel.setBorder(BorderFactory.createTitledBorder("Which gender are you interested in?"));
        genderPanel.add(male);
        genderPanel.add(female);
        genderPanel.setBackground(Color.ORANGE);
        return genderPanel;
    }

    /**
     * enables user to select multiple favourite tv shows
     * @return a panel containing instruction + multi-select list
     */
    public static JPanel selectTVShows(){
        //the array of items the user can choose from
        String[] tvShows = {"Breaking Bad", "Rick and Morty", "Better Call Saul", "CSI","The Sopranos","WestWorld"};
        JLabel instruction = new JLabel("Please select your favourite tv shows:");
        //pass the array into the JList instantiation
        JList<String> selectTVShows = new JList<>(tvShows);
        //enable multi-selection
        selectTVShows.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        //you can display the entire list, or a fixed number of items (with scrollbar - we'll cover this next week)
        selectTVShows.setVisibleRowCount(tvShows.length);
        //add a list selection listener to check for user value selection
        ListSelectionListener actionListener = e-> favouriteTVShows = selectTVShows.getSelectedValuesList();
        selectTVShows.addListSelectionListener(actionListener);
        //add the list and instruction to a JPanel and return it
        JPanel tvShowsPanel = new JPanel();
        tvShowsPanel.add(instruction);
        tvShowsPanel.add(selectTVShows);
        tvShowsPanel.setBackground(Color.YELLOW);
        return tvShowsPanel;
    }

    /**
     * method to allow user to enter/select preferences
     * @return JPanel of 6 sub-JPanels, each containing a user entry/selection
     */
    public static JPanel groupPanels(){
        JPanel allEntries = new JPanel();
        allEntries.setLayout(new BoxLayout(allEntries,BoxLayout.Y_AXIS));
        allEntries.add(enterName());
        allEntries.add(enterStatement());
        allEntries.add(selectColor());
        allEntries.add(COSC120());
        allEntries.add(chooseGender());
        allEntries.add(selectTVShows());
        return allEntries;
    }
}
